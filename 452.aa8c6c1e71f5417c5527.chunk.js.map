{"version":3,"sources":["webpack://react-template/./app/components/CollectionModal/index.js","webpack://react-template/./app/containers/TrackContainer/index.js"],"names":["StyledButton","styled","collectionId","collectionName","collectionPrice","collectionViewUrl","children","useState","isModalVisible","setIsModalVisible","data-testid","onClick","title","visible","onOk","window","open","okText","onCancel","closable","bordered","column","size","span","label","TrackContent","media","StyledImageContainer","StyledImage","StyledAudio","TrackDetails","TrackName","T","colors","ArtistName","ReleaseDate","CollectionName","getLimitLineCSS","TrackGenre","requestGetTrack","trackProviderCreators","dateFormat","date","Date","toLocaleDateString","month","day","year","valueStyle","fontSize","TrackContainer","dispatchGetTrack","track","maxWidth","padding","trackError","loading","setLoading","params","useParams","useEffect","loadingTimeout","setTimeout","clearTimeout","trackId","Container","Helmet","trackName","artistName","name","content","active","width","height","src","artworkUrl100","fallback","If","condition","otherwise","id","noOfLines","text","releaseDate","noOFLines","suffix","precision","value","trackPrice","trackTimeMillis","country","primaryGenreName","previewUrl","preload","controls","mapStateToProps","createStructuredSelector","selectTrack","selectTrackError","mapDispatchToProps","dispatch","withConnect","connect","compose","memo","injectSaga","key","saga","trackProviderSaga","TrackContainerTest","injectIntl"],"mappings":"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","file":"452.aa8c6c1e71f5417c5527.chunk.js","sourcesContent":["import { Descriptions, Modal } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  background-color: transparent;\n  margin-bottom: 0.5rem;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  padding-left: 0;\n`;\n\nexport const OK_TEXT = 'More Info';\n\nfunction CollectionModal({ collectionId, collectionName, collectionPrice, collectionViewUrl, children }) {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    window.open(collectionViewUrl, '_blank');\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <StyledButton data-testid=\"modal-trigger\" onClick={showModal}>\n        {children}\n      </StyledButton>\n      <Modal\n        data-testid=\"collection-modal\"\n        title=\"Collection Details\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        okText={OK_TEXT}\n        onCancel={handleCancel}\n        closable\n      >\n        <Descriptions bordered column={2} size=\"small\">\n          <Descriptions.Item span={2} label=\"Collection ID\">\n            {collectionId}\n          </Descriptions.Item>\n          <Descriptions.Item span={2} label=\"Collection Name\">\n            {collectionName}\n          </Descriptions.Item>\n          <Descriptions.Item span={2} label=\"Collection Price\">\n            {collectionPrice} $\n          </Descriptions.Item>\n        </Descriptions>\n      </Modal>\n    </>\n  );\n}\n\nCollectionModal.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  collectionId: PropTypes.number,\n  collectionName: PropTypes.string,\n  collectionPrice: PropTypes.number,\n  collectionViewUrl: PropTypes.string\n};\n\nexport default CollectionModal;\n","/**\n *\n * TrackContainer\n *\n */\n\nimport CollectionModal from '@app/components/CollectionModal';\nimport If from '@app/components/If';\nimport { getLimitLineCSS, T } from '@app/components/T';\nimport { colors, media } from '@app/themes';\nimport { Card, Col, Image, Row, Skeleton, Statistic } from 'antd';\nimport { isEmpty } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { memo, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { injectSaga } from 'redux-injectors';\nimport { createStructuredSelector } from 'reselect';\nimport styled from 'styled-components';\nimport { Container } from '../TrackGridContainer';\nimport { trackProviderCreators } from '../TrackProvider/reducer';\nimport trackProviderSaga from '../TrackProvider/saga';\nimport { selectTrack, selectTrackError } from '../TrackProvider/selectors';\n\nconst TrackContent = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n\n  ${media.lessThan('tablet')`\n    flex-direction: column !important;\n  `}\n`;\n\nconst StyledImageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  flex: 0.4;\n`;\n\nconst StyledImage = styled(Image)`\n  && {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst StyledAudio = styled.audio`\n  display: block;\n  margin-top: 1rem;\n`;\n\nconst TrackDetails = styled.div`\n  flex: 0.6;\n`;\n\nconst TrackName = styled(T)`\n  && {\n    color: ${colors.gotoStories};\n    font-size: 1.6rem;\n    margin-bottom: 0.5rem;\n    font-weight: 700;\n  }\n`;\nconst ArtistName = styled(T)`\n  && {\n    margin-top: 0rem;\n    font-size: 1.2rem;\n    font-weight: 600;\n    margin-bottom: 0.6rem;\n    opacity: 0.5;\n  }\n`;\n\nconst ReleaseDate = styled(T)`\n  && {\n    margin-bottom: 0.2rem;\n    font-weight: bold;\n    color: #444;\n    width: 100%;\n  }\n`;\n\nconst CollectionName = styled.p`\n  && {\n    margin: 0.5rem 0;\n    cursor: pointer;\n    ${getLimitLineCSS(3)}\n    animation: blink infinite 1.5s;\n\n    @keyframes blink {\n      0% {\n        color: ${colors.gotoStories};\n      }\n      50% {\n        opacity: 0.5;\n      }\n      100% {\n        color: ${colors.text};\n      }\n    }\n\n    &:hover {\n      color: ${colors.success};\n    }\n  }\n`;\n\nconst TrackGenre = styled(T)`\n  && {\n    margin-top: 0.5rem;\n    font-size: smaller;\n    font-weight: bold;\n    padding: 0.5rem;\n    background-color: #d8fa43;\n    width: max-content;\n    border-radius: 999px;\n  }\n`;\n\nconst { requestGetTrack } = trackProviderCreators;\n\nexport function dateFormat(date) {\n  return new Date(date).toLocaleDateString('en-IN', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  });\n}\n\nconst valueStyle = { fontSize: '1.2rem' };\n\nexport function TrackContainer({ dispatchGetTrack, track, maxWidth, padding, trackError }) {\n  const [loading, setLoading] = useState(true);\n  const params = useParams();\n\n  useEffect(() => {\n    if (!isEmpty(track) || !isEmpty(trackError)) {\n      setLoading(false);\n    }\n    let loadingTimeout = setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n    return () => {\n      clearTimeout(loadingTimeout);\n    };\n  }, [track, trackError]);\n\n  useEffect(() => {\n    if (dispatchGetTrack) {\n      dispatchGetTrack(params.trackId);\n    }\n  }, [params.trackId]);\n\n  return (\n    <Container maxWidth={maxWidth} padding={padding}>\n      <Helmet>\n        <title>\n          {track?.trackName\n            ? `${track?.trackName}${track?.artistName && ` by ${track?.artistName}`}`\n            : 'TrackContainer'}\n        </title>\n        <meta name=\"description\" content={track?.trackName ?? 'Description of TrackContainer'} />\n      </Helmet>\n      <Skeleton data-testid=\"loader\" loading={loading} active>\n        <Card>\n          <TrackContent>\n            <StyledImageContainer>\n              <StyledImage\n                width=\"95%\"\n                height=\"95%\"\n                src={track?.artworkUrl100 ?? ''}\n                fallback=\"https://media.istockphoto.com/vectors/thumbnail-image-vector-graphic-vector-id1147544807?k=20&m=1147544807&s=612x612&w=0&h=pBhz1dkwsCMq37Udtp9sfxbjaMl27JUapoyYpQm0anc=\"\n              />\n            </StyledImageContainer>\n            <TrackDetails>\n              <If\n                condition={!isEmpty(track?.trackName)}\n                otherwise={<TrackName data-testid=\"track_name_unavailable\" id=\"track_name_unavailable\" />}\n              >\n                <TrackName noOfLines={3} title={track?.trackName} data-testid=\"track-name\" text={track?.trackName} />\n              </If>\n              <If\n                condition={!isEmpty(track?.artistName)}\n                otherwise={<ArtistName data-testid=\"artist_name_unavailable\" id=\"artist_name_unavailable\" />}\n              >\n                <ArtistName data-testid=\"artist-name\" text={track?.artistName} />\n              </If>\n              <If\n                condition={!isEmpty(track?.releaseDate)}\n                otherwise={<ReleaseDate data-testid=\"release_date_unavailable\" id=\"release_date_unavailable\" />}\n              >\n                <ReleaseDate data-testid=\"release-date\" text={`Release Date: ${dateFormat(track?.releaseDate)}`} />\n              </If>\n              <If\n                condition={!isEmpty(track?.collectionName)}\n                otherwise={<T data-testid=\"collection_name_unavailable\" id=\"collection_name_unavailable\" />}\n              >\n                <CollectionModal\n                  collectionId={track?.collectionId}\n                  collectionName={track?.collectionName}\n                  collectionPrice={track?.collectionPrice}\n                  collectionViewUrl={track?.collectionViewUrl}\n                >\n                  <CollectionName noOFLines={3} data-testid=\"collection-name\">\n                    {track?.collectionName}\n                  </CollectionName>\n                </CollectionModal>\n              </If>\n              <Row>\n                <Col span={8}>\n                  <Statistic\n                    data-testid=\"track-price\"\n                    suffix=\"$\"\n                    precision={2}\n                    title=\"Track Price\"\n                    value={track?.trackPrice}\n                    valueStyle={valueStyle}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Statistic\n                    data-testid=\"track-time\"\n                    precision={2}\n                    suffix=\" s\"\n                    title=\"Track Time\"\n                    value={track?.trackTimeMillis / 1000}\n                    valueStyle={valueStyle}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Statistic\n                    data-testid=\"track-country\"\n                    precision={2}\n                    title=\"Country\"\n                    value={track?.country}\n                    valueStyle={valueStyle}\n                  />\n                </Col>\n              </Row>\n              <If condition={typeof track?.trackPrice !== 'number'}>\n                <T data-testid=\"track_price_unavailable\" id=\"track_price_unavailable\" />\n              </If>\n\n              <If\n                condition={!isEmpty(track?.primaryGenreName)}\n                otherwise={<TrackGenre data-testid=\"track_genre_unavailable\" id=\"track_genre_unavailable\" />}\n              >\n                <TrackGenre data-testid=\"track-genre\" text={track?.primaryGenreName} />\n              </If>\n              <If condition={!isEmpty(track?.previewUrl)} otherwise={<T id=\"track_preview_unavailable\" />}>\n                <StyledAudio loading=\"lazy\" preload=\"none\" controls src={track?.previewUrl}>\n                  Your browser does not support <code>audio</code> element\n                </StyledAudio>\n              </If>\n            </TrackDetails>\n          </TrackContent>\n        </Card>\n      </Skeleton>\n    </Container>\n  );\n}\n\nTrackContainer.propTypes = {\n  dispatchGetTrack: PropTypes.func,\n  track: PropTypes.object,\n  trackError: PropTypes.any,\n  maxWidth: PropTypes.number,\n  padding: PropTypes.number\n};\n\nconst mapStateToProps = createStructuredSelector({\n  track: selectTrack(),\n  trackError: selectTrackError()\n});\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    dispatchGetTrack: (trackId) => dispatch(requestGetTrack(trackId))\n  };\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(\n  withConnect,\n  memo,\n  injectSaga({ key: 'trackProvider', saga: trackProviderSaga })\n)(TrackContainer);\n\nexport const TrackContainerTest = compose(injectIntl)(TrackContainer);\n"],"sourceRoot":""}